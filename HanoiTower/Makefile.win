# Project: Torre_de_Hanoi
# Makefile created by Dev-C++ 5.0.0.9

CPP      = g++.exe -D__DEBUG__
CC       = gcc.exe -D__DEBUG__
WINDRES  = windres.exe
OBJ      = main.o printBase.o printDisc.o criarPilha.o moveCursor.o push.o pop.o setDiscs.o exibePilha.o moveDisco.o DiscTop.o printTorre.o printSquareShadow.o printSquare.o OpcaoSelec.o funcPlay.o confQuit.o boxInfoPartida.o verificaTorreCompleta.o help.o ranking.o printHaste.o getInfoPlayer.o scanfStr.o screen.o others.o $(RES)
LINKOBJ  = main.o printBase.o printDisc.o criarPilha.o moveCursor.o push.o pop.o setDiscs.o exibePilha.o moveDisco.o DiscTop.o printTorre.o printSquareShadow.o printSquare.o OpcaoSelec.o funcPlay.o confQuit.o boxInfoPartida.o verificaTorreCompleta.o help.o ranking.o printHaste.o getInfoPlayer.o scanfStr.o screen.o others.o $(RES)
LIBS     = -L"A:/Programas/Dev C++ e Conio2/Dev-Cpp portable/MinGW32/lib" -static-libstdc++ -static-libgcc -lconio -g  -g3 
INCS     = -I"A:/Programas/Dev C++ e Conio2/Dev-Cpp portable/MinGW32/include" 
CXXINCS  = -I"A:/Programas/Dev C++ e Conio2/Dev-Cpp portable/MinGW32/include" 
BIN      = Torre_de_Hanoi.exe
CXXFLAGS = $(CXXINCS)   -g3
CFLAGS   = $(INCS)   -g3
RM       = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before Torre_de_Hanoi.exe all-after


clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o "Torre_de_Hanoi.exe" $(LIBS)

main.o: main.c
	$(CC) -c main.c -o main.o $(CFLAGS)

printBase.o: printBase.c
	$(CC) -c printBase.c -o printBase.o $(CFLAGS)

printDisc.o: printDisc.c
	$(CC) -c printDisc.c -o printDisc.o $(CFLAGS)

criarPilha.o: criarPilha.c
	$(CC) -c criarPilha.c -o criarPilha.o $(CFLAGS)

moveCursor.o: moveCursor.c
	$(CC) -c moveCursor.c -o moveCursor.o $(CFLAGS)

push.o: push.c
	$(CC) -c push.c -o push.o $(CFLAGS)

pop.o: pop.c
	$(CC) -c pop.c -o pop.o $(CFLAGS)

setDiscs.o: setDiscs.c
	$(CC) -c setDiscs.c -o setDiscs.o $(CFLAGS)

exibePilha.o: exibePilha.c
	$(CC) -c exibePilha.c -o exibePilha.o $(CFLAGS)

moveDisco.o: moveDisco.c
	$(CC) -c moveDisco.c -o moveDisco.o $(CFLAGS)

DiscTop.o: DiscTop.c
	$(CC) -c DiscTop.c -o DiscTop.o $(CFLAGS)

printTorre.o: printTorre.c
	$(CC) -c printTorre.c -o printTorre.o $(CFLAGS)

printSquareShadow.o: printSquareShadow.c
	$(CC) -c printSquareShadow.c -o printSquareShadow.o $(CFLAGS)

printSquare.o: printSquare.c
	$(CC) -c printSquare.c -o printSquare.o $(CFLAGS)

OpcaoSelec.o: OpcaoSelec.c
	$(CC) -c OpcaoSelec.c -o OpcaoSelec.o $(CFLAGS)

funcPlay.o: funcPlay.c
	$(CC) -c funcPlay.c -o funcPlay.o $(CFLAGS)

confQuit.o: confQuit.c
	$(CC) -c confQuit.c -o confQuit.o $(CFLAGS)

boxInfoPartida.o: boxInfoPartida.c
	$(CC) -c boxInfoPartida.c -o boxInfoPartida.o $(CFLAGS)

verificaTorreCompleta.o: verificaTorreCompleta.c
	$(CC) -c verificaTorreCompleta.c -o verificaTorreCompleta.o $(CFLAGS)

help.o: help.c
	$(CC) -c help.c -o help.o $(CFLAGS)

ranking.o: ranking.c
	$(CC) -c ranking.c -o ranking.o $(CFLAGS)

printHaste.o: printHaste.c
	$(CC) -c printHaste.c -o printHaste.o $(CFLAGS)

getInfoPlayer.o: getInfoPlayer.c
	$(CC) -c getInfoPlayer.c -o getInfoPlayer.o $(CFLAGS)

scanfStr.o: scanfStr.c
	$(CC) -c scanfStr.c -o scanfStr.o $(CFLAGS)

screen.o: screen.c
	$(CC) -c screen.c -o screen.o $(CFLAGS)

others.o: others.c
	$(CC) -c others.c -o others.o $(CFLAGS)
